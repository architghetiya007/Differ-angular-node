{"version":3,"sources":["./src/app/differ-signup/differ-signup.component.ts","./src/app/differ-signup/differ-signup.component.html","./src/app/layouts/master/master.component.html","./src/app/layouts/master/master.component.ts","./src/app/differ-signup-verify/differ-signup-verify.component.ts","./src/app/differ-signup-verify/differ-signup-verify.component.html","./src/app/config/http.interceptor.ts","./src/app/differ-my-profile/differ-my-profile.component.ts","./src/app/differ-my-profile/differ-my-profile.component.html","./src/environments/environment.ts","./src/app/checkout/checkout.component.ts","./src/app/checkout/checkout.component.html","./src/app/differ-customer-information/differ-customer-information.component.ts","./src/app/differ-customer-information/differ-customer-information.component.html","./src/app/differ-nav-bar/differ-nav-bar.component.ts","./src/app/differ-nav-bar/differ-nav-bar.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/safe.pipe.ts","./src/app/app.module.ts","./src/app/differ-service-list/differ-service-list.service.ts","./src/app/route.guard.ts","./src/app/differ-service-list/differ-service-list.component.html","./src/app/differ-service-list/differ-service-list.component.ts","./src/app/differ-service-address/differ-service-address.component.ts","./src/app/differ-service-address/differ-service-address.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DifferServiceList } from './../differ-service-list/differ-service-list.service';\r\n// import { AuthService } from './../register/auth.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-differ-signup',\r\n  templateUrl: './differ-signup.component.html',\r\n  styleUrls: ['./differ-signup.component.css']\r\n})\r\nexport class DifferSignupComponent implements OnInit {\r\n\r\n  signupForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private router: Router, private differServiceList:DifferServiceList) { }\r\n\r\n  ngOnInit(): void {\r\n    this.signupForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(70), Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\") ]),\r\n    });\r\n  }\r\n\r\n  get signupFormHas(): { [key: string]: AbstractControl } {\r\n    return this.signupForm.controls;\r\n  }\r\n  \r\n  customer : any;\r\n  async handleSubmit() {\r\n    this.submitted = true;\r\n    if (this.signupForm.invalid) {\r\n      return;\r\n    }\r\n    sessionStorage.setItem('email',this.signupForm.value.email);\r\n    let reqData = {\r\n      address:sessionStorage.getItem('address'),\r\n      selectedId:sessionStorage.getItem('selectedId'),\r\n      email: this.signupForm.value.email,\r\n    }\r\n    this.differServiceList.differCreateCustomer(reqData).subscribe(async (result:any) => {\r\n      if(result['code'] == 201 ) {\r\n        this.router.navigate(['/webapp/login']);\r\n      }\r\n      if(result['code'] == 200 || result['code'] == 204) {\r\n        this.customer = result['data'];\r\n        this.router.navigate(['/webapp/differ-signup-verify']);\r\n      }\r\n    }, \r\n    (err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n}\r\n","<div class=\"d-flex justify-content-center align-items-center flex-column h-100\">\r\n    <p class=\"medium-text\">\r\n      Enter your email address to<br />create your account\r\n    </p>\r\n    <form\r\n      [formGroup]=\"signupForm\"\r\n      (ngSubmit)=\"handleSubmit()\"\r\n      class=\"form signup\"\r\n    >\r\n      <label for=\"\">Email Address</label>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        name=\"email\"\r\n        formControlName=\"email\"\r\n        placeholder=\"Enter Your Email Address\"\r\n      />\r\n      <div class=\"error-box\" *ngIf=\"submitted && signupFormHas.email?.errors\">\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"signupFormHas.email.errors?.required\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address is Required</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; signupForm.reset()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"signupFormHas.email.errors?.minlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address between 5 to 70 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; signupForm.reset()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"signupFormHas.email.errors?.maxlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address between 5 to 70 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; signupForm.reset()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"signupFormHas.email.errors?.pattern\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address is not valid</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; signupForm.reset()\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n      <button class=\"btn w-100\" type=\"submit\">Next</button>\r\n    </form>\r\n  </div>\r\n  \r\n  <!-- <div class=\"row mt-5 title\">\r\n    <div class=\"col-md-6 mx-auto\">\r\n      <div class=\"card rounded-20\">\r\n        <div class=\"card-header\">\r\n          <h3 class=\"mb-0\">Enter your email address to create your account</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form [formGroup]=\"signupForm\" (ngSubmit)=\"handleSubmit()\" class=\"form\">\r\n            <div class=\"form-group rounded-15\">\r\n              <label for=\"\">Enter Your Email Address</label>\r\n  \r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"email\"\r\n                name=\"email\"\r\n                required\r\n              />\r\n            </div>\r\n            <div *ngIf=\"submitted && signupFormHas.email?.errors\">\r\n              <small\r\n                *ngIf=\"signupFormHas.email.errors?.required\"\r\n                class=\"text-danger\"\r\n              >\r\n                Email Address is Required\r\n              </small>\r\n              <small\r\n                *ngIf=\"signupFormHas.email.errors?.minlength\"\r\n                class=\"text-danger\"\r\n              >\r\n                Email Address between 5 to 70 characters\r\n              </small>\r\n              <small\r\n                *ngIf=\"signupFormHas.email.errors?.maxlength\"\r\n                class=\"text-danger\"\r\n              >\r\n                Email Address between 5 to 70 characters</small\r\n              >\r\n              <small\r\n                *ngIf=\"signupFormHas.email.errors?.pattern\"\r\n                class=\"text-danger\"\r\n              >\r\n                Email Address is not valid</small\r\n              >\r\n            </div>\r\n            <div class=\"\">\r\n              <button type=\"submit\" class=\"btn btn-success float-right\">\r\n                Next\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n  ","<div class=\"container-fluid\">\r\n  <div class=\"master-box\">\r\n    <nav class=\"navbar navbar-light\">\r\n      <a\r\n        class=\"navbar-brand\"\r\n        href=\"javascript:void(0)\"\r\n        routerLink=\"webapp/differ-service-address\"\r\n        >DIFFER</a\r\n      >\r\n      <a\r\n        class=\"login-btn\"\r\n        routerLink=\"webapp/login\"\r\n        href=\"javascript:void(0)\"\r\n        title=\"Login\"\r\n        ><i class=\"fa-solid fa-right-to-bracket\"></i\r\n      ></a>\r\n      <a\r\n        class=\"logout-btn\"\r\n        (click)=\"logout()\"\r\n        href=\"javascript:void(0)\"\r\n        *ngIf=\"loggedIn\"\r\n        title=\"Logout\"\r\n        ><i class=\"fa-solid fa-right-from-bracket\"></i\r\n      ></a>\r\n    </nav>\r\n    <div class=\"login\">\r\n      <a class=\"login-btn\" routerLink=\"webapp/login\"\r\n        ><i class=\"fa-solid fa-right-to-bracket\"></i\r\n      ></a>\r\n    </div>\r\n    <div class=\"logout\" *ngIf=\"loggedIn\">\r\n      <a (click)=\"logout()\" class=\"logout-btn\" href=\"javascript:void(0)\"\r\n        ><i class=\"fa-solid fa-right-from-bracket\"></i\r\n      ></a>\r\n    </div>\r\n    <div class=\"container\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\n@Component({\r\n  selector: 'app-master',\r\n  templateUrl: './master.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class MasterComponent implements OnInit {\r\n\r\n  loggedIn :any; \r\n  \r\n  constructor(private router:Router) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.loggedIn = sessionStorage.getItem('token');\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/webapp/differ-service-address']);\r\n    this.loggedIn = '';\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChildren } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Key } from 'protractor';\r\nimport swal from 'sweetalert2';\r\nimport { DifferServiceList } from './../differ-service-list/differ-service-list.service'\r\n\r\n@Component({\r\n  selector: 'app-differ-signup-verify',\r\n  templateUrl: './differ-signup-verify.component.html',\r\n  styleUrls: ['./differ-signup-verify.component.css']\r\n})\r\n\r\nexport class DifferSignupVerifyComponent implements OnInit {\r\n\r\n  signupVerifyForm!: FormGroup;\r\n  submitted = false;\r\n  formInput = ['input1', 'input2', 'input3', 'input4', 'input5', 'input6'];\r\n  @ViewChildren('formRow') rows: any;\r\n  \r\n  constructor(private router: Router, private differServiceList:DifferServiceList) {\r\n    this.signupVerifyForm = this.toFormGroup(this.formInput);\r\n  }\r\n\r\n  toFormGroup(elements:any) {\r\n    const group: any = {};\r\n\r\n    elements.forEach((key:any) => {\r\n      group[key] = new FormControl('', Validators.required);\r\n    });\r\n    return new FormGroup(group);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.signupVerifyForm = new FormGroup({\r\n    //   emailOTP: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(6) ]),\r\n    // });\r\n  }\r\n\r\n  keyUpEvent(event:any, index:any) {\r\n    let pos = index;\r\n    if (event.keyCode === 8 && event.which === 8) {\r\n      pos = index - 1 ;\r\n    } else {\r\n      pos = index + 1 ;\r\n    }\r\n    if (pos > -1 && pos < this.formInput.length ) {\r\n      this.rows._results[pos].nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  get signupVerifyFormHas(): { [key: string]: AbstractControl } {\r\n    return this.signupVerifyForm.controls;\r\n  }\r\n\r\n  OTP:any = [];\r\n  FULL_OTP:any = [];\r\n  handleSubmit() {\r\n    this.submitted = true;\r\n    if (this.signupVerifyForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let obj = { \r\n      ...this.signupVerifyForm.value\r\n    };\r\n\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n          this.OTP.push(obj[key]);\r\n      }\r\n    }\r\n\r\n    this.FULL_OTP = this.OTP.join('');\r\n    \r\n    let reqData = {\r\n      email:sessionStorage.getItem('email'),\r\n      FULL_OTP: this.FULL_OTP,\r\n    }\r\n    this.differServiceList.differSignUpVerifyOTP(reqData).subscribe((result:any) => {\r\n      if(result['code'] == 200 ) {\r\n        this.router.navigate(['/webapp/differ-customer-information']);\r\n      }\r\n      else {\r\n        this.signupVerifyForm.reset();\r\n        this.FULL_OTP = [];\r\n        this.OTP = [];\r\n        swal.fire('OTP is Invalid');\r\n      }\r\n    }, \r\n    (err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center align-items-center flex-column h-100\">\r\n    <p class=\"medium-text\">\r\n      Enter the code that was sent to<br />your email address\r\n    </p>\r\n    <form\r\n      [formGroup]=\"signupVerifyForm\"\r\n      (ngSubmit)=\"handleSubmit()\"\r\n      class=\"form signup-verify\"\r\n    >\r\n    <label for=\"\">OTP</label>\r\n      <div class=\"d-flex flex-row\">\r\n        <div class=\"form-group\" *ngFor=\"let input of formInput; index as i\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"emailOTP\"\r\n            formControlName=\"{{ input }}\"\r\n            maxlength=\"1\"\r\n            (keyup)=\"keyUpEvent($event, i)\"\r\n            #formRow\r\n          />\r\n        </div>\r\n      </div>\r\n      <button class=\"btn btn-success w-100\" type=\"submit\">Verify</button>\r\n      <div class=\"text-center mt-4\">\r\n        <!-- <a routerLink=\"/differ-signup-verify\" class=\"link\"\r\n          >didn't receive your code?\r\n        </a> -->\r\n      </div>\r\n    </form>\r\n  </div>\r\n  \r\n  <!-- <div class=\"row mt-5 title\">\r\n    <div class=\"col-md-6 mx-auto\">\r\n      <div class=\"card rounded-20\">\r\n        <div class=\"card-header\">\r\n          <h3 class=\"mb-0\">Enter the code that was sent to your email address</h3>\r\n        </div>\r\n        <div class=\"card-body text-center\">\r\n          <form\r\n            [formGroup]=\"signupVerifyForm\"\r\n            (ngSubmit)=\"handleSubmit()\"\r\n            class=\"form\"\r\n          >\r\n            <div class=\"row\">\r\n              <div\r\n                class=\"form-group col-sm-2\"\r\n                *ngFor=\"let input of formInput; index as i\"\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  #formRow\r\n                  class=\"form-control\"\r\n                  formControlName=\"{{ input }}\"\r\n                  maxlength=\"1\"\r\n                  name=\"emailOTP\"\r\n                  (keyup)=\"keyUpEvent($event, i)\"\r\n                  required\r\n                />\r\n              </div>\r\n            </div> -->\r\n  \r\n  <!-- <div *ngIf=\"submitted && signupVerifyFormHas.emailOTP?.errors\">\r\n                           <small *ngIf=\"signupVerifyFormHas.emailOTP.errors?.required\" class=\"text-danger\" > OTP is Required </small>\r\n                           <small *ngIf=\"signupVerifyFormHas.emailOTP.errors?.min\" class=\"text-danger\" > OTP need to be 6 digit </small>\r\n                           <small *ngIf=\"signupVerifyFormHas.emailOTP.errors?.max\" class=\"text-danger\" > OTP need to be 6 digit</small>\r\n                       </div> -->\r\n  \r\n  <!-- <div class=\"\">\r\n              <button type=\"submit\" class=\"btn btn-success\">Verify</button>\r\n              <a\r\n                routerLink=\"/differ-signup-verify\"\r\n                class=\"text-center float-right\"\r\n                >didn't receive your code?\r\n              </a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpEvent, HttpResponse, HttpRequest, HttpHandler } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { environment } from './../../environments/environment';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\n\r\n@Injectable()\r\nexport class MyInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private ngxLoader: NgxUiLoaderService\r\n  ) { }\r\n\r\n  intercept(httpRequest: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    const token = sessionStorage.getItem(\"token\");\r\n    if (token) {\r\n        const authReq = httpRequest.clone({\r\n            headers: httpRequest.headers.set('authorization',token)\r\n        });\r\n        httpRequest = authReq;\r\n        // this.ngxLoader.start();\r\n    }\r\n    return next.handle(httpRequest).pipe(\r\n      tap(\r\n          event => this.handleResponse(httpRequest, event),\r\n          error => this.handleError(httpRequest, error)\r\n      )\r\n    );\r\n  }\r\n\r\n  handleResponse(httpRequest: HttpRequest<any>, event:any) {\r\n      // this.ngxLoader.stop();\r\n      //console.log('Handling response for ', req.url, event);\r\n      if (event instanceof HttpResponse) {\r\n          // console.log('Request for ', req.url,\r\n          //      ' Response Status ', event.status,\r\n          //      ' With body ', event.body);\r\n      }\r\n  }\r\n\r\n  handleError(httpRequest: HttpRequest<any>, error:any) {\r\n    // this.ngxLoader.stop();\r\n    if (error.status == 400 || error.status == 401 || error.status == 404|| error.status == 500){\r\n        sessionStorage.clear();\r\n        setTimeout(() => {\r\n          //window.location.href =environment.redirect_link;\r\n        }, 1000);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DifferServiceList } from './../differ-service-list/differ-service-list.service';\r\n// import { AuthService } from './../register/auth.service';\r\nimport swal from 'sweetalert2';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-differ-my-profile',\r\n  templateUrl: './differ-my-profile.component.html',\r\n  styleUrls: []\r\n})\r\nexport class DifferMyProfileComponent implements OnInit {\r\n\r\n  constructor(private differServiceList:DifferServiceList) { }\r\n  \r\n  myProfileForm!: FormGroup;\r\n  mySubscriptionForm!: FormGroup;\r\n  MyNetworkForm!: FormGroup;\r\n  changePassword!: FormGroup;\r\n  submitted1 = false;\r\n  submitted2 = false;\r\n  submitted3 = false;\r\n  submitted4 = false;\r\n  DeviceArr:any = [];\r\n  formattedDate:any;\r\n  profileInfo : any;\r\n  subscriptionInfo:any;\r\n  externalLink:any = null;\r\n\r\n  ngOnInit(): void {\r\n    this.myProfileForm = new FormGroup({\r\n      firstName: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(30) ]),\r\n      lastName: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(30) ]),\r\n      serviceAddress: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(70) ]),\r\n      // birthday: new FormControl('', [Validators.required ]),\r\n    });\r\n\r\n    this.changePassword = new FormGroup({\r\n      password: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(15) ]),\r\n    });\r\n\r\n    this.mySubscriptionForm = new FormGroup({\r\n      name: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(70) ]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(15) ]),\r\n      serviceAddress: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(70) ]),\r\n    });\r\n\r\n    this.MyNetworkForm = new FormGroup({\r\n      SSID: new FormControl('', [Validators.required ]),\r\n      NetworkPassword: new FormControl('', [Validators.required ]),\r\n    });\r\n\r\n    this.getNetworkInfo();\r\n    this.getProfileInfo();\r\n    this.getSubscriptionInfo();\r\n  }\r\n\r\n  get myProfileFormHas(): { [key: string]: AbstractControl } {\r\n    return this.myProfileForm.controls;\r\n  }\r\n\r\n  get mySubscriptionFormHas(): { [key: string]: AbstractControl } {\r\n    return this.mySubscriptionForm.controls;\r\n  }\r\n\r\n  get MyNetworkFormHas(): { [key: string]: AbstractControl } {\r\n    return this.MyNetworkForm.controls;\r\n  }\r\n\r\n  get ChangePasswordFormHas(): { [key: string]: AbstractControl } {\r\n    return this.changePassword.controls;\r\n  }\r\n\r\n  handleSubmit1() {\r\n    this.submitted1 = true;\r\n    if (this.myProfileForm.invalid) {\r\n      return;\r\n    }\r\n    let reqData = {\r\n      email:sessionStorage.getItem('email'),\r\n      firstName: this.myProfileForm.value.firstName,\r\n      lastName: this.myProfileForm.value.lastName,\r\n      serviceAddress: this.myProfileForm.value.serviceAddress,\r\n      birthday: this.myProfileForm.value.birthday,\r\n    };\r\n    this.differServiceList.differUpdateProfile(reqData).subscribe((result:any) => {\r\n      if(result['code'] == 200) {\r\n        swal.fire(\"profile update successfully...\");\r\n        this.getProfileInfo();\r\n      }\r\n\r\n    },(err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n\r\n  handleSubmit2() {\r\n    this.submitted2 = true;\r\n    if (this.mySubscriptionForm.invalid) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  handleSubmit3() {\r\n    this.submitted3 = true;\r\n    if (this.MyNetworkForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let reqObj = {\r\n      ssid:this.MyNetworkForm.value.SSID,\r\n      wpa2_key:this.MyNetworkForm.value.NetworkPassword\r\n    }\r\n    \r\n\r\n    this.differServiceList.differUpdateNetworkInfo(reqObj).subscribe((result:any) => {\r\n      if(result['code'] == 200) {\r\n        this.getNetworkInfo();\r\n        swal.fire(\"Update Successfully...\");\r\n      }\r\n      else {\r\n        swal.fire(result['message']);\r\n      }\r\n\r\n    }, \r\n    (err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n\r\n\r\n  }\r\n\r\n  handleSubmitChangePassword() {\r\n    this.submitted4 = true;\r\n    if (this.changePassword.invalid) {\r\n      return;\r\n    }\r\n    console.log(this.changePassword.value,\">>>>>>>>>>>\");\r\n    let reqData = {\r\n      password : this.changePassword.value.password\r\n    }\r\n    this.differServiceList.changePassword(reqData).subscribe((result:any) => {\r\n      if(result['code'] == 200) {\r\n        swal.fire(\"Password change successfully...\");\r\n        this.submitted4 = false; \r\n        this.changePassword.reset();\r\n      }\r\n    },(err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n\r\n  convertDate(str:any) {\r\n    var date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n    return [date.getFullYear(), mnth, day];\r\n  }\r\n\r\n  getNetworkInfo() {\r\n    let reqObj = {\r\n      email:sessionStorage.getItem('email')\r\n    }\r\n    this.differServiceList.differGetNetworkInfo(reqObj).subscribe((result:any) => {\r\n      if(result['code'] == 200 ) {\r\n        \r\n        result.data.devices.forEach((element:any) => {\r\n          this.DeviceArr.push(element)\r\n        });\r\n         this.MyNetworkForm.patchValue({\r\n          SSID: result.data.ssid,\r\n          NetworkPassword :result.data.wpa2_key,\r\n         });\r\n      }\r\n    }, \r\n    (err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n\r\n  getProfileInfo() {\r\n\r\n    this.differServiceList.differGetUserInfo().subscribe((result:any) => {\r\n      this.profileInfo = result.data;\r\n      this.formattedDate = this.convertDate(result.data.cf_birthday);\r\n      this.myProfileForm.patchValue({\r\n        firstName: result.data.first_name ,\r\n        lastName: result.data.last_name ,\r\n        serviceAddress: result.data.cf_address || sessionStorage.getItem('address') ,\r\n        birthday : new Date(this.formattedDate[2]+'/'+this.formattedDate[1]+'/'+this.formattedDate[0])\r\n      });\r\n    }, \r\n    (err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n\r\n\r\n  getSubscriptionInfo() {\r\n    this.differServiceList.differGetSubscriptionList().subscribe((result:any) => {\r\n      if(result['code'] == 200) {\r\n        this.subscriptionInfo = result.data;\r\n      }\r\n      else {\r\n        this.subscriptionInfo = [];\r\n      }\r\n    }, \r\n    (err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n\r\n  changeBillingDetail(element:any) {\r\n    let reqObj = {\r\n      gatewayAccountId:element.card.gateway_account_id,\r\n      customerId:element.card.customer_id\r\n     }\r\n     \r\n     this.differServiceList.differChangebillingDetail(reqObj).subscribe((result:any) => {\r\n      if(result['code'] == 200 ) {\r\n        // window.location.href= result.data.hosted_page.url;\r\n        this.externalLink = result.data.hosted_page.url;\r\n      }\r\n    }, \r\n    (err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n\r\n  manageSubscription(element:any) {\r\n     let reqObj = {\r\n      subscriptionId:element.subscription.id,\r\n      itemPriceId:element.subscription.subscription_items[0].item_price_id\r\n     }\r\n     \r\n     this.differServiceList.differChangeSubscription(reqObj).subscribe((result:any) => {\r\n      if(result['code'] == 200 ) {\r\n        // window.location.href = result.data.hosted_page.url\r\n        this.externalLink = result.data.hosted_page.url;\r\n      }\r\n    }, \r\n    (err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n  \r\n}\r\n","<div class=\"d-flex justify-content-center align-items-center flex-column h-100\">\r\n    <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n      <li class=\"nav-item\" role=\"profile\">\r\n        <button\r\n          class=\"nav-link active\"\r\n          id=\"profile-tab\"\r\n          data-bs-toggle=\"pill\"\r\n          data-bs-target=\"#profile\"\r\n          type=\"button\"\r\n          role=\"tab\"\r\n          aria-controls=\"profile\"\r\n          aria-selected=\"true\"\r\n        >\r\n          My Profile\r\n        </button>\r\n      </li>\r\n      <li class=\"nav-item\" role=\"profile\">\r\n        <button\r\n          class=\"nav-link\"\r\n          id=\"subscription-tab\"\r\n          data-bs-toggle=\"pill\"\r\n          data-bs-target=\"#subscription\"\r\n          type=\"button\"\r\n          role=\"tab\"\r\n          aria-controls=\"subscription\"\r\n          aria-selected=\"false\"\r\n        >\r\n          My Subscription\r\n        </button>\r\n      </li>\r\n      <li class=\"nav-item\" role=\"profile\">\r\n        <button\r\n          class=\"nav-link\"\r\n          id=\"network-tab\"\r\n          data-bs-toggle=\"pill\"\r\n          data-bs-target=\"#network\"\r\n          type=\"button\"\r\n          role=\"tab\"\r\n          aria-controls=\"network\"\r\n          aria-selected=\"false\"\r\n        >\r\n          My Network\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <div class=\"tab-content\" id=\"pills-tabContent\">\r\n      <div\r\n        class=\"tab-pane fade show active\"\r\n        id=\"profile\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"profile-tab\"\r\n      >\r\n        <form\r\n          [formGroup]=\"myProfileForm\"\r\n          (ngSubmit)=\"handleSubmit1()\"\r\n          class=\"form customer-info\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"firstName\"\r\n            formControlName=\"firstName\"\r\n            placeholder=\"First Name\"\r\n          />\r\n          <div\r\n            class=\"error-box\"\r\n            *ngIf=\"submitted1 && myProfileFormHas.firstName?.errors\"\r\n          >\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"myProfileFormHas.firstName.errors?.required\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\">First Name is Required</span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted1 = false; myProfileForm.reset()\"\r\n              ></button>\r\n            </div>\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"myProfileFormHas.firstName.errors?.minlength\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\"\r\n                >First Name between 3 to 30 characters</span\r\n              >\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted1 = false; myProfileForm.reset()\"\r\n              ></button>\r\n            </div>\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"myProfileFormHas.firstName.errors?.maxlength\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\"\r\n                >First Name between 3 to 30 characters</span\r\n              >\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted1 = false; myProfileForm.reset()\"\r\n              ></button>\r\n            </div>\r\n          </div>\r\n  \r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"lastName\"\r\n            formControlName=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n          />\r\n          <div\r\n            class=\"error-box\"\r\n            *ngIf=\"submitted1 && myProfileFormHas.lastName?.errors\"\r\n          >\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"myProfileFormHas.lastName.errors?.required\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\">Last Name is Required</span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted1 = false; myProfileForm.reset()\"\r\n              ></button>\r\n            </div>\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"myProfileFormHas.lastName.errors?.minlength\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\">Last Name between 5 to 30 characters</span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted1 = false; myProfileForm.reset()\"\r\n              ></button>\r\n            </div>\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"myProfileFormHas.lastName.errors?.maxlength\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\">Last Name between 5 to 30 characters</span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted1 = false; myProfileForm.reset()\"\r\n              ></button>\r\n            </div>\r\n          </div>\r\n    \r\n          <textarea\r\n            class=\"form-control\"\r\n            name=\"serviceAddress\"\r\n            formControlName=\"serviceAddress\"\r\n            placeholder=\"Service Address\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n          <div\r\n            class=\"error-box\"\r\n            *ngIf=\"submitted1 && myProfileFormHas.serviceAddress?.errors\"\r\n          >\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"myProfileFormHas.serviceAddress.errors?.required\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\">Service Address is Required</span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted1 = false; myProfileForm.reset()\"\r\n              ></button>\r\n            </div>\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"myProfileFormHas.serviceAddress.errors?.minlength\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\"\r\n                >Service Address between 5 to 70 characters</span\r\n              >\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted1 = false; myProfileForm.reset()\"\r\n              ></button>\r\n            </div>\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"myProfileFormHas.serviceAddress.errors?.maxlength\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\"\r\n                >Service Address between 5 to 70 characters</span\r\n              >\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted1 = false; myProfileForm.reset()\"\r\n              ></button>\r\n            </div>\r\n          </div>\r\n  \r\n          <button class=\"btn w-100 mb-2\" type=\"submit\">Submit</button>\r\n        </form>\r\n\r\n        <form\r\n        [formGroup]=\"changePassword\"\r\n        (ngSubmit)=\"handleSubmitChangePassword()\"\r\n        class=\"form customer-info\"\r\n      >\r\n         \r\n        <h2 class=\"text-center m-5\">change password</h2>\r\n        <input\r\n          type=\"password\"\r\n          class=\"form-control\"\r\n          name=\"password\"\r\n          formControlName=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <div\r\n          class=\"error-box\"\r\n          *ngIf=\"submitted4 && ChangePasswordFormHas.password?.errors\"\r\n        >\r\n          <div\r\n            class=\"alert alert-danger alert-dismissible fade show\"\r\n            role=\"alert\"\r\n            *ngIf=\"ChangePasswordFormHas.password.errors?.required\"\r\n          >\r\n            <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n            <span class=\"error-text\">Password is Required</span>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn-close\"\r\n              data-bs-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n              (click)=\"submitted4 = false; changePassword.reset()\"\r\n            ></button>\r\n          </div>\r\n          <div\r\n            class=\"alert alert-danger alert-dismissible fade show\"\r\n            role=\"alert\"\r\n            *ngIf=\"ChangePasswordFormHas.password.errors?.minlength\"\r\n          >\r\n            <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n            <span class=\"error-text\">Password between 5 to 15 characters</span>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn-close\"\r\n              data-bs-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n              (click)=\"submitted4 = false; changePassword.reset()\"\r\n            ></button>\r\n          </div>\r\n          <div\r\n            class=\"alert alert-danger alert-dismissible fade show\"\r\n            role=\"alert\"\r\n            *ngIf=\"ChangePasswordFormHas.password.errors?.maxlength\"\r\n          >\r\n            <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n            <span class=\"error-text\">Password between 5 to 15 characters</span>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn-close\"\r\n              data-bs-dismiss=\"alert\"\r\n              aria-label=\"Close\"\r\n              (click)=\"submitted4 = false; changePassword.reset()\"\r\n            ></button>\r\n          </div>\r\n        </div>\r\n\r\n        <button class=\"btn w-100 mb-2\" type=\"submit\">Submit</button>\r\n      </form>\r\n      </div>\r\n      <div\r\n        class=\"tab-pane fade\"\r\n        id=\"subscription\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"subscription-tab\"\r\n      >\r\n        <div class=\"table-box\">\r\n          <table class=\"table table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Subscription</th>\r\n                <th scope=\"col\">Address</th>\r\n                <th scope=\"col\">Billing Details</th>\r\n                <th scope=\"col\" width=\"160px\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let element of subscriptionInfo\">\r\n                <td>{{ element.subscription.subscription_items[0].item_price_id}}</td>\r\n                <td>{{ element.customer.billing_address.line1}}</td>\r\n                <td>\r\n                  <p>{{ element.card.masked_number}}</p>\r\n                </td>\r\n                <td>\r\n                  <button (click)=\"manageSubscription(element)\"\r\n                    type=\"button\"\r\n                    class=\"btn btn-light mb-2 me-2\"\r\n                    data-bs-toggle=\"tooltip\"\r\n                    data-bs-placement=\"bottom\"\r\n                    title=\"Manage My Subscription\"\r\n                  >\r\n                    <i class=\"fa-solid fa-money-check\"></i>\r\n                  </button>\r\n                  <button (click)=\"changeBillingDetail(element)\"\r\n                    type=\"button\" \r\n                    class=\"btn btn-light mb-2\"\r\n                    data-bs-toggle=\"tooltip\"\r\n                    data-bs-placement=\"bottom\"\r\n                    title=\"Change Billing Details\"\r\n                  >\r\n                    <i class=\"fa-solid fa-file-invoice-dollar\"></i>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"iframe-box mt-5 pt-5\" *ngIf=\"externalLink\">\r\n          <button type=\"button\" class=\"btn btn-light iframe-cancel-btn\" (click)=\"externalLink = null;\"><i class=\"fa-solid fa-xmark\"></i></button>\r\n          <div class=\"ratio ratio-16x9 mt-3\">\r\n            <iframe [src]=\"externalLink | safe\" allowfullscreen></iframe>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"tab-pane fade\"\r\n        id=\"network\"\r\n        role=\"tabpanel\"\r\n        aria-labelledby=\"network-tab\"\r\n      >\r\n        <form\r\n          [formGroup]=\"MyNetworkForm\"\r\n          (ngSubmit)=\"handleSubmit3()\"\r\n          class=\"form customer-info\"\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"SSID\"\r\n            formControlName=\"SSID\"\r\n            placeholder=\"SSID\"\r\n          />\r\n          <div\r\n            class=\"error-box\"\r\n            *ngIf=\"submitted3 && MyNetworkFormHas.SSID?.errors\"\r\n          >\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"MyNetworkFormHas.SSID.errors?.required\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\">SSID is Required</span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted3 = false; MyNetworkForm.reset()\"\r\n              ></button>\r\n            </div>\r\n          </div>\r\n  \r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"NetworkPassword\"\r\n            formControlName=\"NetworkPassword\"\r\n            placeholder=\"Network Password\"\r\n          />\r\n          <div\r\n            class=\"error-box\"\r\n            *ngIf=\"submitted3 && MyNetworkFormHas.NetworkPassword?.errors\"\r\n          >\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"MyNetworkFormHas.NetworkPassword.errors?.required\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\">Network Password is Required</span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted3 = false; MyNetworkForm.reset()\"\r\n              ></button>\r\n            </div>\r\n          </div>\r\n  \r\n          <button class=\"btn w-100 mb-2\" type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- \r\n              <input\r\n            type=\"date\"\r\n            class=\"form-control\"\r\n            name=\"birthday\"\r\n            formControlName=\"birthday\"\r\n            placeholder=\"Birthday\"\r\n          />\r\n          <div\r\n            class=\"error-box\"\r\n            *ngIf=\"submitted1 && myProfileFormHas.birthday?.errors\"\r\n          >\r\n            <div\r\n              class=\"alert alert-danger alert-dismissible fade show\"\r\n              role=\"alert\"\r\n              *ngIf=\"myProfileFormHas.birthday.errors?.required\"\r\n            >\r\n              <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n              <span class=\"error-text\">Birthday is Required</span>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                (click)=\"submitted1 = false; myProfileForm.reset()\"\r\n              ></button>\r\n            </div>\r\n          </div>\r\n    \r\n    <mat-tab-group class=\"ml-5 justify-content-center text-center\">\r\n    <mat-tab label=\"My Profile\">\r\n      <div class=\"row mt-5 title\">\r\n        <div class=\"col-md-6 mx-auto\">\r\n          <div class=\"card rounded-20\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"mb-0\">Customer Information</h3>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form\r\n                [formGroup]=\"myProfileForm\"\r\n                (ngSubmit)=\"handleSubmit1()\"\r\n                class=\"form\"\r\n              >\r\n                <div class=\"form-group rounded-15\">\r\n                  <mat-form-field class=\"full-width\">\r\n                    <input\r\n                      matInput\r\n                      placeholder=\"First Name\"\r\n                      formControlName=\"firstName\"\r\n                      required\r\n                    />\r\n                    <mat-error\r\n                      *ngIf=\"submitted1 && myProfileFormHas.firstName?.errors\"\r\n                    >\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.firstName.errors?.required\"\r\n                      >\r\n                        First Name is Required\r\n                      </mat-error>\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.firstName.errors?.minlength\"\r\n                      >\r\n                        First Name between 3 to 30 characters</mat-error\r\n                      >\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.firstName.errors?.maxlength\"\r\n                      >\r\n                        First Name between 3 to 30 characters</mat-error\r\n                      >\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n  \r\n                <div class=\"form-group rounded-15\">\r\n                  <mat-form-field class=\"full-width\">\r\n                    <input\r\n                      matInput\r\n                      placeholder=\"Last Name\"\r\n                      formControlName=\"lastName\"\r\n                      required\r\n                    />\r\n                    <mat-error\r\n                      *ngIf=\"submitted1 && myProfileFormHas.lastName?.errors\"\r\n                    >\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.lastName.errors?.required\"\r\n                      >\r\n                        Last Name is Required\r\n                      </mat-error>\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.lastName.errors?.minlength\"\r\n                      >\r\n                        Last Name between 3 to 30 characters</mat-error\r\n                      >\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.lastName.errors?.maxlength\"\r\n                      >\r\n                        Last Name between 3 to 30 characters</mat-error\r\n                      >\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n  \r\n                <div class=\"form-group rounded-15\">\r\n                  <mat-form-field class=\"full-width\">\r\n                    <input\r\n                      type=\"password\"\r\n                      matInput\r\n                      placeholder=\"password\"\r\n                      formControlName=\"password\"\r\n                      name=\"password\"\r\n                      required\r\n                    />\r\n                    <mat-error\r\n                      *ngIf=\"submitted1 && myProfileFormHas.password?.errors\"\r\n                    >\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.password.errors?.required\"\r\n                      >\r\n                        Password is Required\r\n                      </mat-error>\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.password.errors?.minlength\"\r\n                      >\r\n                        Password between 5 to 15 characters</mat-error\r\n                      >\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.password.errors?.maxlength\"\r\n                      >\r\n                        Password between 5 to 15 characters</mat-error\r\n                      >\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n  \r\n                <div class=\"form-group rounded-15\">\r\n                  <mat-form-field class=\"full-width\">\r\n                    <input\r\n                      matInput\r\n                      placeholder=\"serviceAddress\"\r\n                      formControlName=\"serviceAddress\"\r\n                      name=\"serviceAddress\"\r\n                      required\r\n                    />\r\n                    <mat-error\r\n                      *ngIf=\"\r\n                        submitted1 && myProfileFormHas.serviceAddress?.errors\r\n                      \"\r\n                    >\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.serviceAddress.errors?.required\"\r\n                        >Service Address is Required\r\n                      </mat-error>\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.serviceAddress.errors?.minlength\"\r\n                        >Service Address between 5 to 70 characters</mat-error\r\n                      >\r\n                      <mat-error\r\n                        class=\"error-message\"\r\n                        *ngIf=\"myProfileFormHas.serviceAddress.errors?.maxlength\"\r\n                        >Service Address between 5 to 70 characters</mat-error\r\n                      >\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n  \r\n                <div class=\"form-group rounded-15\">\r\n                  <mat-form-field class=\"full-width\">\r\n                    <input\r\n                      matInput\r\n                      [matDatepicker]=\"picker\"\r\n                      placeholder=\"Your birthday\"\r\n                      formControlName=\"birthday\"\r\n                      required\r\n                    />\r\n                    <mat-datepicker-toggle\r\n                      matSuffix\r\n                      [for]=\"picker\"\r\n                    ></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error\r\n                      *ngIf=\"submitted1 && myProfileFormHas.birthday?.errors\"\r\n                    >\r\n                      <mat-error\r\n                        *ngIf=\"myProfileFormHas.birthday.errors?.required\"\r\n                        >Birth Date is Required\r\n                      </mat-error>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n  \r\n                <div class=\"\">\r\n                  <button type=\"submit\" class=\"btn btn-success float-left\">\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"My Subscription\">\r\n      <div class=\"row mt-5 title\">\r\n        <div class=\"col-md-6 mx-auto\">\r\n          <div class=\"card rounded-20\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"mb-0\">Customer Information</h3>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form\r\n                [formGroup]=\"mySubscriptionForm\"\r\n                (ngSubmit)=\"handleSubmit2()\"\r\n                class=\"form\"\r\n              >\r\n                <div class=\"form-group rounded-15\">\r\n                  <label for=\"\">Name</label>\r\n  \r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"name\"\r\n                    name=\"name\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div *ngIf=\"submitted2 && mySubscriptionFormHas.name?.errors\">\r\n                  <small\r\n                    *ngIf=\"mySubscriptionFormHas.name.errors?.required\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    Name is Required\r\n                  </small>\r\n                  <small\r\n                    *ngIf=\"mySubscriptionFormHas.name.errors?.minlength\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    Name between 5 to 30 characters\r\n                  </small>\r\n                  <small\r\n                    *ngIf=\"mySubscriptionFormHas.name.errors?.maxlength\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    Name between 5 to 30 characters</small\r\n                  >\r\n                </div>\r\n  \r\n                <div class=\"form-group rounded-15\">\r\n                  <label for=\"\">Password</label>\r\n  \r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"password\"\r\n                    name=\"name\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div *ngIf=\"submitted2 && mySubscriptionFormHas.password?.errors\">\r\n                  <small\r\n                    *ngIf=\"mySubscriptionFormHas.password.errors?.required\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    Password is Required\r\n                  </small>\r\n                  <small\r\n                    *ngIf=\"mySubscriptionFormHas.password.errors?.minlength\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    Password between 5 to 15 characters\r\n                  </small>\r\n                  <small\r\n                    *ngIf=\"mySubscriptionFormHas.password.errors?.maxlength\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    Password between 5 to 15 characters</small\r\n                  >\r\n                </div>\r\n  \r\n                <div class=\"form-group rounded-15\">\r\n                  <label for=\"\">Service Address</label>\r\n  \r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"serviceAddress\"\r\n                    name=\"name\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div\r\n                  *ngIf=\"\r\n                    submitted2 && mySubscriptionFormHas.serviceAddress?.errors\r\n                  \"\r\n                >\r\n                  <small\r\n                    *ngIf=\"mySubscriptionFormHas.serviceAddress.errors?.required\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    Service Address is Required\r\n                  </small>\r\n                  <small\r\n                    *ngIf=\"mySubscriptionFormHas.serviceAddress.errors?.minlength\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    Service Address between 5 to 70 characters\r\n                  </small>\r\n                  <small\r\n                    *ngIf=\"mySubscriptionFormHas.serviceAddress.errors?.maxlength\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    Service Address between 5 to 70 characters</small\r\n                  >\r\n                </div>\r\n  \r\n                <div class=\"\">\r\n                  <button type=\"submit\" class=\"btn btn-success float-left\">\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"My Network\">\r\n      <div class=\"row mt-5 title\">\r\n        <div class=\"col-md-6 mx-auto\">\r\n          <div class=\"card rounded-20\">\r\n            <div class=\"card-header\">\r\n              <h3 class=\"mb-0\">Network Information</h3>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <form\r\n                [formGroup]=\"MyNetworkForm\"\r\n                (ngSubmit)=\"handleSubmit3()\"\r\n                class=\"form\"\r\n              >\r\n                <div class=\"form-group rounded-15\">\r\n                  <label for=\"\">SSID</label>\r\n  \r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"SSID\"\r\n                    name=\"SSID\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div *ngIf=\"submitted3 && MyNetworkFormHas.SSID?.errors\">\r\n                  <small\r\n                    *ngIf=\"MyNetworkFormHas.SSID.errors?.required\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    SSID is Required\r\n                  </small>\r\n                </div>\r\n  \r\n                <div class=\"form-group rounded-15\">\r\n                  <label for=\"\">Network Password</label>\r\n  \r\n                  <input\r\n                    type=\"password\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"NetworkPassword\"\r\n                    name=\"name\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div\r\n                  *ngIf=\"submitted3 && MyNetworkFormHas.NetworkPassword?.errors\"\r\n                >\r\n                  <small\r\n                    *ngIf=\"MyNetworkFormHas.NetworkPassword.errors?.required\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    Network Password is Required\r\n                  </small>\r\n                </div>\r\n  \r\n                <div class=\"form-group rounded-15\">\r\n                  <label for=\"\">My Devices</label>\r\n                  <div>\r\n                    <span *ngFor=\"let ele of DeviceArr\"\r\n                      >{{ ele.ip }} {{ ele.hostname }}</span\r\n                    >\r\n                  </div>\r\n                </div>\r\n                <div *ngIf=\"submitted3 && MyNetworkFormHas.MyDevice?.errors\">\r\n                  <small\r\n                    *ngIf=\"MyNetworkFormHas.MyDevice.errors?.required\"\r\n                    class=\"text-danger\"\r\n                  >\r\n                    My Devices is Required\r\n                  </small>\r\n                </div>\r\n  \r\n                <div class=\"\">\r\n                  <button type=\"submit\" class=\"btn btn-success float-left\">\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group> -->\r\n  ","export const environment = {\r\n  production: false,\r\n  baseUrl: '/api'\r\n};\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2';\r\nimport { DifferServiceList } from './../differ-service-list/differ-service-list.service'\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.css']\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n\r\n  constructor(private differServiceList:DifferServiceList,private router:Router) {\r\n  }\r\n\r\n  elementName:any;\r\n \r\n  ngOnInit() {\r\n    this.checkService();\r\n    this.elementName = sessionStorage.getItem('selectedId')\r\n  }\r\n\r\n  checkService() {\r\n    this.differServiceList.differSubscriptionList().subscribe( (result:any) => {\r\n      if( result['code'] == 200 ) {\r\n          if(result.data.length > 0) {\r\n            this.router.navigate(['/webapp/differ-my-profile'])\r\n          }\r\n      } else if(result['code'] == 204 && ( sessionStorage.getItem('selectedId') == undefined || sessionStorage.getItem('selectedId') == null ) ) {\r\n          Swal.fire(\"Select Any One Service\").then(\r\n            () => {\r\n              this.router.navigate(['/webapp/differ-service-list']);\r\n            }\r\n          );\r\n      }\r\n    }, (err:any) => {\r\n      console.log(err,'err>>>>>>');\r\n    })\r\n  }\r\n\r\n  openCheckout() {\r\n    let reqObj = {\r\n      price_id: sessionStorage.getItem('selectedId')\r\n    }\r\n    this.differServiceList.differCheckOut(reqObj).subscribe((result:any) => {\r\n      if(result['code'] == 200 ) {\r\n        window.location.href= result.data.hosted_page.url\r\n      }\r\n    }, \r\n    (err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center align-items-center flex-column h-100\">\r\n    <p class=\"medium-text mb-4\">Payment</p>\r\n    <div class=\"mb-4\">\r\n        <div class=\"row card-box\">\r\n            <div class=\"col-12\">\r\n                <div class=\"card\">\r\n                    <p class=\"card-title\">Service Title</p>\r\n                    <ul class=\"card-items-list\">\r\n                      <li class=\"item\">{{ elementName }}</li>\r\n                      <li class=\"item\">here is a feature included</li>\r\n                    </ul>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <button type=\"button\" class=\"btn payment-btn\" (click)=\"openCheckout()\">\r\n      Proceed to Pay\r\n    </button>\r\n</div>\r\n\r\n\r\n<!-- <div id=\"container\" class=\"checkout container\">\r\n    <div id=\"customer-info\" class=\"row\">                \r\n        <div class=\"col-sm-7\" id=\"checkout_info\">   \r\n            <div id=\"subscribe-form\">\r\n                <hr>                            \r\n                <div class=\"form-inline\">\r\n                    <div class=\"form-group\">\r\n                    <button type=\"button\" class=\"btn btn-success\" (click)=\"openCheckout()\">Process To checkout</button>\r\n                    </div>\r\n                </div>                        \r\n              </div>\r\n        </div>\r\n    </div>\r\n    <div id=\"checkout-info\" class=\"row\">\r\n    </div>\r\n</div> -->","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DifferServiceList } from \"./../differ-service-list/differ-service-list.service\";\r\n// import { AuthService } from './../register/auth.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-differ-customer-information',\r\n  templateUrl: './differ-customer-information.component.html',\r\n  styleUrls: ['./differ-customer-information.component.css']\r\n})\r\nexport class DifferCustomerInformationComponent implements OnInit {\r\n\r\n  InformationForm!: FormGroup;\r\n  submitted = false;\r\n  model: any;\r\n  constructor(private router: Router, private differServiceList: DifferServiceList) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.InformationForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(70), Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\")]),\r\n      firstName: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]),\r\n      lastName: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(30)]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(15)]),\r\n      serviceAddress: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(70)]),\r\n      birthday: new FormControl('', [Validators.required,]),\r\n    });\r\n\r\n    this.prefilledEmail();\r\n  }\r\n\r\n  resetForm() {\r\n    this.InformationForm.reset();\r\n    this.prefilledEmail();\r\n  }\r\n\r\n  prefilledEmail() {\r\n    if(sessionStorage.getItem('email')) {\r\n      this.InformationForm.patchValue({\r\n        email: sessionStorage.getItem('email'),\r\n        serviceAddress: sessionStorage.getItem('address')\r\n      })\r\n    }\r\n  }\r\n\r\n  get informationFormHas(): { [key: string]: AbstractControl } {\r\n    return this.InformationForm.controls;\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.submitted = true;\r\n    if (this.InformationForm.invalid) {\r\n      return;\r\n    }\r\n \r\n    sessionStorage.setItem('birthday',this.InformationForm.value.birthday);\r\n    sessionStorage.setItem('firstName',this.InformationForm.value.firstName);\r\n    sessionStorage.setItem('lastName',this.InformationForm.value.lastName);\r\n    \r\n    let reqData = {\r\n      email: this.InformationForm.value.email,\r\n      firstName: this.InformationForm.value.firstName,\r\n      lastName: this.InformationForm.value.lastName,\r\n      password: this.InformationForm.value.password,\r\n      serviceAddress: this.InformationForm.value.serviceAddress,\r\n      birthday: this.InformationForm.value.birthday,\r\n    };\r\n    this.differServiceList.differCustomerInformation(reqData).subscribe((result: any) => {\r\n      if (result['code'] == 200) {\r\n        sessionStorage.setItem('token',result.data.token);\r\n        this.router.navigate(['/webapp/differ-checkout']);\r\n      }\r\n      else {\r\n        swal.fire(result.message);\r\n      }\r\n    },\r\n      (err: any) => {\r\n        console.log(err, \"error\");\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center align-items-center flex-column h-100\">\r\n    <p class=\"medium-text\">Customer Information</p>\r\n    <form\r\n      [formGroup]=\"InformationForm\"\r\n      (ngSubmit)=\"handleSubmit()\"\r\n      class=\"form customer-info\"\r\n    >\r\n    <label for=\"\">First Name</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        name=\"firstName\"\r\n        formControlName=\"firstName\"\r\n        placeholder=\"First Name\"\r\n      />\r\n      <div\r\n        class=\"error-box\"\r\n        *ngIf=\"submitted && informationFormHas.firstName?.errors\"\r\n      >\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.firstName.errors?.required\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">First Name is Required</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.firstName.errors?.minlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">First Name between 3 to 30 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.firstName.errors?.maxlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">First Name between 3 to 30 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n  \r\n    <label for=\"\">Last Name</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        name=\"lastName\"\r\n        formControlName=\"lastName\"\r\n        placeholder=\"Last Name\"\r\n      />\r\n      <div\r\n        class=\"error-box\"\r\n        *ngIf=\"submitted && informationFormHas.lastName?.errors\"\r\n      >\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.lastName.errors?.required\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Last Name is Required</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.lastName.errors?.minlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Last Name between 5 to 30 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.lastName.errors?.maxlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Last Name between 5 to 30 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n\r\n      <label for=\"\">Email Address</label>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        name=\"email\" readonly\r\n        formControlName=\"email\"\r\n        placeholder=\"Email Address\"\r\n      />\r\n      <div\r\n        class=\"error-box\"\r\n        *ngIf=\"submitted && informationFormHas.email?.errors\"\r\n      >\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.email.errors?.required\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address is Required</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.email.errors?.minlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address between 5 to 70 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.email.errors?.maxlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address between 5 to 70 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.email.errors?.pattern\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address is not valid</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n  \r\n      <label for=\"\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        formControlName=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n      <div\r\n        class=\"error-box\"\r\n        *ngIf=\"submitted && informationFormHas.password?.errors\"\r\n      >\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.password.errors?.required\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Password is Required</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.password.errors?.minlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Password between 5 to 15 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.password.errors?.maxlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Password between 5 to 15 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n  \r\n      <label for=\"\">BirthDate</label>\r\n      <input\r\n        type=\"date\"\r\n        class=\"form-control\"\r\n        name=\"birthday\"\r\n        formControlName=\"birthday\"\r\n        placeholder=\"Birthday\"\r\n      />\r\n      <div\r\n        class=\"error-box\"\r\n        *ngIf=\"submitted && informationFormHas.birthday?.errors\"\r\n      >\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.birthday.errors?.required\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Birthday is Required</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n\r\n      <label for=\"\">Address</label>\r\n      <textarea \r\n        class=\"form-control\"\r\n        name=\"serviceAddress\" readonly\r\n        formControlName=\"serviceAddress\"\r\n        placeholder=\"Service Address\"\r\n        rows=\"3\"\r\n      ></textarea>\r\n      <div\r\n        class=\"error-box\"\r\n        *ngIf=\"submitted && informationFormHas.serviceAddress?.errors\"\r\n      >\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.serviceAddress.errors?.required\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Service Address is Required</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.email.errors?.minlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address between 5 to 70 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"informationFormHas.email.errors?.maxlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address between 5 to 70 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; resetForm()\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n  \r\n      <button class=\"btn w-100 mb-2\" type=\"submit\">Next</button>\r\n      <a class=\"w-100 mb-2\" type=\"button\" [routerLink]=\"['/login']\">Want to Login?</a>\r\n    </form>\r\n  </div>\r\n  \r\n  <!-- <div class=\"row mt-5 title\">\r\n    <div class=\"col-md-6 mx-auto\">\r\n      <div class=\"card rounded-20\">\r\n        <div class=\"card-header\">\r\n          <h3 class=\"mb-0\">Customer Information</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form\r\n            [formGroup]=\"InformationForm\"\r\n            (ngSubmit)=\"handleSubmit()\"\r\n            class=\"form\"\r\n          >\r\n            <div class=\"form-group rounded-15\">\r\n              <mat-form-field class=\"full-width\">\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Email\"\r\n                  formControlName=\"email\"\r\n                  required\r\n                />\r\n                <mat-error *ngIf=\"submitted && informationFormHas.email?.errors\">\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.email.errors?.required\"\r\n                  >\r\n                    Email is Required\r\n                  </mat-error>\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.email.errors?.minlength\"\r\n                  >\r\n                    Email between 5 to 30 characters</mat-error\r\n                  >\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.email.errors?.maxlength\"\r\n                  >\r\n                    Email between 5 to 30 characters</mat-error\r\n                  >\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n  \r\n            <div class=\"form-group rounded-15\">\r\n              <mat-form-field class=\"full-width\">\r\n                <input\r\n                  matInput\r\n                  placeholder=\"First Name\"\r\n                  formControlName=\"firstName\"\r\n                  required\r\n                />\r\n                <mat-error\r\n                  *ngIf=\"submitted && informationFormHas.firstName?.errors\"\r\n                >\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.firstName.errors?.required\"\r\n                  >\r\n                    First Name is Required\r\n                  </mat-error>\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.firstName.errors?.minlength\"\r\n                  >\r\n                    First Name between 3 to 30 characters</mat-error\r\n                  >\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.firstName.errors?.maxlength\"\r\n                  >\r\n                    First Name between 3 to 30 characters</mat-error\r\n                  >\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n  \r\n            <div class=\"form-group rounded-15\">\r\n              <mat-form-field class=\"full-width\">\r\n                <input\r\n                  matInput\r\n                  placeholder=\"Last Name\"\r\n                  formControlName=\"lastName\"\r\n                  required\r\n                />\r\n                <mat-error\r\n                  *ngIf=\"submitted && informationFormHas.lastName?.errors\"\r\n                >\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.lastName.errors?.required\"\r\n                  >\r\n                    Last Name is Required\r\n                  </mat-error>\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.lastName.errors?.minlength\"\r\n                  >\r\n                    Last Name between 3 to 30 characters</mat-error\r\n                  >\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.lastName.errors?.maxlength\"\r\n                  >\r\n                    Last Name between 3 to 30 characters</mat-error\r\n                  >\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n  \r\n            <div class=\"form-group rounded-15\">\r\n              <mat-form-field class=\"full-width\">\r\n                <input\r\n                  type=\"password\"\r\n                  matInput\r\n                  placeholder=\"password\"\r\n                  formControlName=\"password\"\r\n                  name=\"password\"\r\n                  required\r\n                />\r\n                <mat-error\r\n                  *ngIf=\"submitted && informationFormHas.password?.errors\"\r\n                >\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.password.errors?.required\"\r\n                  >\r\n                    Last Name is Required\r\n                  </mat-error>\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.password.errors?.minlength\"\r\n                  >\r\n                    Last Name between 5 to 30 characters</mat-error\r\n                  >\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.password.errors?.maxlength\"\r\n                  >\r\n                    Last Name between 5 to 30 characters</mat-error\r\n                  >\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n  \r\n            <div class=\"form-group rounded-15\">\r\n              <mat-form-field class=\"full-width\">\r\n                <input\r\n                  matInput\r\n                  placeholder=\"serviceAddress\"\r\n                  formControlName=\"serviceAddress\"\r\n                  name=\"serviceAddress\"\r\n                  required\r\n                />\r\n                <mat-error\r\n                  *ngIf=\"submitted && informationFormHas.serviceAddress?.errors\"\r\n                >\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.serviceAddress.errors?.required\"\r\n                    >Service Address is Required\r\n                  </mat-error>\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.serviceAddress.errors?.minlength\"\r\n                    >Service Address between 5 to 70 characters</mat-error\r\n                  >\r\n                  <mat-error\r\n                    class=\"error-message\"\r\n                    *ngIf=\"informationFormHas.serviceAddress.errors?.maxlength\"\r\n                    >Service Address between 5 to 70 characters</mat-error\r\n                  >\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n  \r\n            <div class=\"form-group rounded-15\">\r\n              <mat-form-field class=\"full-width\">\r\n                <input\r\n                  matInput\r\n                  [matDatepicker]=\"picker\"\r\n                  placeholder=\"Your birthday\"\r\n                  formControlName=\"birthday\"\r\n                  required\r\n                />\r\n                <mat-datepicker-toggle\r\n                  matSuffix\r\n                  [for]=\"picker\"\r\n                ></mat-datepicker-toggle>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n                <mat-error\r\n                  *ngIf=\"submitted && informationFormHas.birthday?.errors\"\r\n                >\r\n                  <mat-error *ngIf=\"informationFormHas.birthday.errors?.required\"\r\n                    >Birth Date is Required\r\n                  </mat-error>\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n  \r\n            <div class=\"\">\r\n              <button type=\"submit\" class=\"btn btn-success float-left\">\r\n                Next\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-differ-nav-bar',\r\n  templateUrl: './differ-nav-bar.component.html',\r\n  styleUrls: ['./differ-nav-bar.component.css']\r\n})\r\nexport class DifferNavBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>\r\n    <mat-toolbar color=\"primary\">\r\n        <!-- routerLink=\"/dashboard\" -->\r\n      <button  mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\r\n        <span>DIFFER</span>  \r\n      </button>\r\n    </mat-toolbar>\r\n  </p> ","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Alexa-angular';\r\n}\r\n","<router-outlet></router-outlet>","import { Pipe, PipeTransform} from '@angular/core';\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n  constructor(private sanitizer: DomSanitizer) { }\r\n  transform(url:any) {\r\n   return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { MyInterceptor } from './config/http.interceptor';\r\nimport { NgxSmartModalModule, NgxSmartModalService } from 'ngx-smart-modal';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule }  from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { DifferServiceAddressComponent } from './differ-service-address/differ-service-address.component';\r\nimport { DifferServiceListComponent } from './differ-service-list/differ-service-list.component';\r\nimport { DifferSignupComponent } from './differ-signup/differ-signup.component';\r\nimport { DifferSignupVerifyComponent } from './differ-signup-verify/differ-signup-verify.component';\r\nimport { DifferCustomerInformationComponent } from './differ-customer-information/differ-customer-information.component';\r\nimport { DifferNavBarComponent } from './differ-nav-bar/differ-nav-bar.component';\r\nimport { DifferMyProfileComponent } from './differ-my-profile/differ-my-profile.component';\r\nimport { CheckoutComponent } from './checkout/checkout.component';\r\nimport { MasterComponent } from './layouts/master/master.component';\r\nimport { SafePipe } from './safe.pipe';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DifferServiceAddressComponent,\r\n    DifferServiceListComponent,\r\n    DifferSignupComponent,\r\n    DifferSignupVerifyComponent,\r\n    DifferCustomerInformationComponent,\r\n    DifferNavBarComponent,\r\n    DifferMyProfileComponent,\r\n    CheckoutComponent,\r\n    MasterComponent,\r\n    SafePipe,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    NgxSmartModalModule.forRoot(),\r\n    NgbModule\r\n    ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: MyInterceptor, multi: true },\r\n    NgxSmartModalService\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from \"./../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DifferServiceList {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  differItemList() {\r\n    return this.http.get(`${environment.baseUrl}/v1/auth/chargebee-item-list`);\r\n  }\r\n\r\n  differCreateCustomer(data:any) {\r\n    return this.http.post(`${environment.baseUrl}/v1/auth/chargebee-user-list`,data);\r\n  }\r\n\r\n  differSignUpVerifyOTP(data:any) {\r\n    return this.http.put(`${environment.baseUrl}/v1/auth/verify-mail`,data);\r\n  }\r\n\r\n  differCustomerInformation(data:any) {\r\n    return this.http.put(`${environment.baseUrl}/v1/auth/chargebee-save-user-detail`,data);\r\n  }\r\n\r\n  differUpdateProfile(data:any) {\r\n    return this.http.put(`${environment.baseUrl}/v1/auth/update-profile`,data);\r\n  }\r\n\r\n  changePassword(data:any) {\r\n    return this.http.put(`${environment.baseUrl}/v1/auth/change-password`,data)\r\n  }\r\n\r\n  login(data:any) {\r\n    return this.http.post(`${environment.baseUrl}/v1/auth/differ-login`,data);\r\n  }\r\n\r\n  differGetNetworkInfo(data:any) {\r\n    return this.http.put(`${environment.baseUrl}/v1/auth/chargebee-network`,data);\r\n  }\r\n\r\n  differUpdateNetworkInfo(data:any) {\r\n    return this.http.put(`${environment.baseUrl}/v1/auth/chargebee-update-network`,data);\r\n  }\r\n\r\n  differGetUserInfo() {\r\n    return this.http.get(`${environment.baseUrl}/v1/auth/chargebee-get-user-detail`);\r\n  }\r\n\r\n  differCheckOut(data:any) {\r\n    return this.http.post(`${environment.baseUrl}/v1/auth/chargebee-checkout`,data);\r\n  }\r\n\r\n  differGetSubscriptionList() {\r\n    return this.http.get(`${environment.baseUrl}/v1/auth/chargebee-subscription-list`);\r\n  }\r\n\r\n  differChangeSubscription(data:any) {\r\n    return this.http.put(`${environment.baseUrl}/v1/auth/chargebee-update-subscription`,data);\r\n  }\r\n\r\n  differChangebillingDetail(data:any) {\r\n    return this.http.put(`${environment.baseUrl}/v1/auth/chargebee-update-billing-detail`,data);\r\n  }\r\n\r\n  differSignup(data:any) {\r\n    return this.http.post(`${environment.baseUrl}/v1/auth/chargebee-signup`,data);\r\n  }\r\n\r\n  differSubscriptionList() {\r\n    return this.http.get(`${environment.baseUrl}/v1/auth/chargebee-subscription-list`);\r\n  }\r\n\r\n  differCheckAddress(data:any) {\r\n    return this.http.post(`${environment.baseUrl}/v1/auth/chargebee-address-compare`,data);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\n// import { AuthService } from \"./register/auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    // private authService: AuthService,\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): any {\r\n    let user = sessionStorage.getItem('token');\r\n    if (user) {\r\n      return new Observable((observer: any) => {\r\n        observer.next(true);\r\n        return;\r\n      })\r\n    }\r\n    else {\r\n      this.router.navigate(['/differ-service-address']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-start align-items-center flex-column h-100\">\r\n    <p class=\"medium-text mb-4\">Services</p>\r\n    <p class=\"faded-small-text mb-2\">Your Address</p>\r\n    <p class=\"small-text\">{{ address }}</p>\r\n    <div class=\"row g-4 card-box\">\r\n      <div class=\"col\" *ngFor=\"let element of serviceItemList\">\r\n        <div class=\"card\">\r\n          <p class=\"card-title\">{{ element.item_price.name }}</p>\r\n          <ul class=\"card-items-list\">\r\n            <li class=\"item\">{{ element.item_price.external_name }}</li>\r\n            <li class=\"item\">${{ element.item_price.price }}</li>\r\n            <li class=\"item\">{{ element.item_price.period_unit }}</li>\r\n          </ul>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-light mt-4\"\r\n            (click)=\"handleServiceClick(element)\"\r\n          >\r\n            Order\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"col\">\r\n        <div class=\"card\">\r\n          <p class=\"card-title\">Service Title</p>\r\n          <p class=\"price-text\">$99</p>\r\n          <ul class=\"card-items-list\">\r\n            <li class=\"item\">list of service options</li>\r\n            <li class=\"item\">this is another one</li>\r\n            <li class=\"item\">here is a feature included</li>\r\n          </ul>\r\n          <button type=\"button\" class=\"btn btn-light mt-4\">Order</button>\r\n        </div>\r\n      </div> -->\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- <div class=\"row mt-5 mb-5 title\">\r\n    <div class=\"col-md-6 mx-auto\">\r\n      <div class=\"card rounded-20\">\r\n        <div class=\"card-header\">\r\n          <h3 class=\"mb-0\">{{ address }}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"row center-service-list\">\r\n    <div class=\"col-4 mb-4\" *ngFor=\"let element of serviceItemList\">\r\n      <div class=\"card\" style=\"width: 18rem\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Service Title</h5>\r\n          <h6 class=\"card-subtitle mb-2 text-muted\">Card subtitle</h6>\r\n          <p class=\"card-text\">- {{ element.item.name }}.</p>\r\n          <p class=\"card-text\">- {{ element.item.status }}.</p>\r\n          <p class=\"card-text\">- here is a feature included.</p>\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"handleServiceClick(element)\"\r\n            class=\"card-link btn btn-info\"\r\n          >\r\n            Order\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div> -->\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DifferServiceList } from './differ-service-list.service';\r\nimport swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-differ-service-list',\r\n  templateUrl: './differ-service-list.component.html',\r\n  styleUrls: ['./differ-service-list.component.css']\r\n})\r\nexport class DifferServiceListComponent implements OnInit {\r\n  public address : any = \"\";\r\n  public serviceList: any = [1,2,3];\r\n\r\n  constructor(private router: Router, private differServiceList:DifferServiceList) { }\r\n\r\n  ngOnInit(): void {\r\n    this.address = sessionStorage.getItem('address');\r\n    this.getItemList();  \r\n  }\r\n\r\n  handleServiceClick(data:any) {\r\n    sessionStorage.setItem(\"selectedId\",data.item_price.id);\r\n    this.router.navigate(['/webapp/differ-signup']);\r\n  }\r\n\r\n  serviceItemList : any = [];\r\n  getItemList() {\r\n    this.differServiceList.differItemList().subscribe((result:any) => {\r\n      if(result['code'] == 200 ) {\r\n        this.serviceItemList = result['data']['list'];\r\n      }\r\n    }, \r\n    (err:any) => {\r\n      console.log(err,\"error\");\r\n    });\r\n  }\r\n  \r\n}\r\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DifferServiceList } from \"./../differ-service-list/differ-service-list.service\";\r\n// import { AuthService } from './../register/auth.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-differ-service-address',\r\n  templateUrl: './differ-service-address.component.html',\r\n  styleUrls: ['./differ-service-address.component.css']\r\n})\r\nexport class DifferServiceAddressComponent implements OnInit {\r\n\r\n  fullAddress = '';\r\n  serviceAddressForm!: FormGroup;\r\n  submitted = false;\r\n  @ViewChild('address') viewChildAddress:any;\r\n  @ViewChild('city') viewChildCity:any;\r\n\r\n  constructor(private router: Router, private differServiceList:DifferServiceList) { }\r\n\r\n  ngOnInit(): void {\r\n    this.serviceAddressForm = new FormGroup({\r\n      address: new FormControl('', [Validators.required]),\r\n      city: new FormControl('', []),\r\n    });\r\n  }\r\n\r\n  get serviceAddressFormHas(): { [key: string]: AbstractControl } {\r\n    return this.serviceAddressForm.controls;\r\n  }\r\n\r\n\r\n  handleSubmit() {\r\n    this.submitted = true;\r\n\r\n    \r\n    this.serviceAddressForm.patchValue({\r\n      address: this.viewChildAddress.nativeElement.value,\r\n      city: this.viewChildCity.nativeElement.value\r\n    });\r\n    \r\n    if (this.serviceAddressForm.invalid) {\r\n      return;\r\n    }\r\n    \r\n    this.fullAddress = this.serviceAddressForm.value.address + ' '+ this.serviceAddressForm.value.city;\r\n    let reqObj = {\r\n      address : this.fullAddress \r\n    };\r\n    this.differServiceList.differCheckAddress(reqObj).subscribe( (result:any) => {\r\n      if(result['code'] == 200) {\r\n        sessionStorage.removeItem('address') \r\n        sessionStorage.setItem(\"address\",this.fullAddress);\r\n        this.router.navigate(['/webapp/differ-service-list']);      \r\n      } else {\r\n        swal.fire(\"Our service is not available at your address\");\r\n        setTimeout(() => {\r\n          window.location.href =  \"http://localhost:3000\"  ;\r\n        }, 2000);\r\n      }\r\n    },(err:any) => {\r\n      console.log(err,\"error\");\r\n    })\r\n  }\r\n  \r\n  cityChange(event:any) {\r\n    this.serviceAddressForm.patchValue({\r\n      city : event.target.value\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n","<!-- <link rel=\"stylesheet\" type=\"text/css\" href=\"http://ws1.postescanada-canadapost.ca/css/addresscomplete-2.30.min.css?key=ac53-ck32-re78-gc78\" /><script type=\"text/javascript\" src=\"http://ws1.postescanada-canadapost.ca/js/addresscomplete-2.30.min.js?key=ac53-ck32-re78-gc78\"></script> -->\r\n<!-- <link rel=\"stylesheet\" type=\"text/css\" href=\"http://ws1.postescanada-canadapost.ca/css/addresscomplete-2.30.min.css?key=kr29-yz92-pw91-wr62\" /><script type=\"text/javascript\" src=\"http://ws1.postescanada-canadapost.ca/js/addresscomplete-2.30.min.js?key=kr29-yz92-pw91-wr62\"></script> -->\r\n\r\n<div class=\"d-flex justify-content-center align-items-center flex-column h-100\">\r\n    <p class=\"faded-small-text\">Let's Get Started!</p>\r\n    <p class=\"large-text\">Enter your address to determine service</p>\r\n    <form\r\n      [formGroup]=\"serviceAddressForm\"\r\n      (ngSubmit)=\"handleSubmit()\"\r\n      class=\"form\"\r\n    >\r\n    <label for=\"\">Your Address</label>\r\n      <div class=\"input-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          name=\"address\"\r\n          formControlName=\"address\"\r\n          placeholder=\"Enter Your Address\"\r\n          #address\r\n        />\r\n        <div class=\"input-group\">\r\n          <input\r\n            type=\"hidden\"\r\n            class=\"form-control\"\r\n            name=\"city\"\r\n            formControlName=\"city\"\r\n            #city\r\n          />\r\n        </div>\r\n        <button class=\"btn\" type=\"submit\">Check Service</button>\r\n      </div>\r\n      <div\r\n        class=\"error-box\"\r\n        *ngIf=\"submitted && serviceAddressFormHas.address?.errors\"\r\n      >\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"serviceAddressFormHas.address.errors?.required\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Address is Required</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; serviceAddressForm.reset()\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  \r\n  <!-- <div class=\"card rounded-20\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"mb-0\">Enter your address to determine service</h3>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <form\r\n        [formGroup]=\"serviceAddressForm\"\r\n        (ngSubmit)=\"handleSubmit()\"\r\n        class=\"form\"\r\n      >\r\n        <div class=\"form-group rounded-15\">\r\n          <label for=\"\">Enter Your Address</label>\r\n  \r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"address\"\r\n            name=\"address\"\r\n            #address\r\n            required\r\n          />\r\n        </div>\r\n        <div *ngIf=\"submitted && serviceAddressFormHas.address?.errors\">\r\n          <small\r\n            *ngIf=\"serviceAddressFormHas.address.errors?.required\"\r\n            class=\"text-danger\"\r\n          >\r\n            Address is Required\r\n          </small>\r\n        </div>\r\n  \r\n        <div class=\"form-group rounded-15\">\r\n          <input\r\n            type=\"hidden\"\r\n            class=\"form-control\"\r\n            formControlName=\"city\"\r\n            name=\"city\"\r\n            #city\r\n          />\r\n        </div>\r\n  \r\n        <div class=\"\">\r\n          <button type=\"submit\" class=\"btn btn-success float-right\">\r\n            Check Service\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div> -->\r\n  ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { CheckoutComponent } from './checkout/checkout.component';\r\nimport { DifferCustomerInformationComponent } from './differ-customer-information/differ-customer-information.component';\r\nimport { DifferMyProfileComponent } from './differ-my-profile/differ-my-profile.component';\r\nimport { DifferServiceAddressComponent } from './differ-service-address/differ-service-address.component';\r\nimport { DifferServiceListComponent } from './differ-service-list/differ-service-list.component';\r\nimport { DifferSignupVerifyComponent } from './differ-signup-verify/differ-signup-verify.component';\r\nimport { DifferSignupComponent } from './differ-signup/differ-signup.component';\r\nimport { RouteGuard } from './route.guard';\r\nimport { MasterComponent } from './layouts/master/master.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path : '',\r\n    pathMatch:'full',\r\n    redirectTo:'/webapp/differ-service-address',\r\n  },\r\n  {\r\n    path : '',\r\n    component: MasterComponent,\r\n    children: [\r\n      {\r\n        path: 'webapp/differ-service-address',\r\n        component: DifferServiceAddressComponent,\r\n      },\r\n      {\r\n        path: 'webapp/differ-service-list',\r\n        component: DifferServiceListComponent,\r\n      },\r\n      {\r\n        path: 'webapp/differ-signup',\r\n        component: DifferSignupComponent,\r\n      },\r\n      {\r\n        path: 'webapp/login',\r\n        component: LoginComponent,\r\n      },\r\n      {\r\n        path: 'webapp/differ-signup-verify',\r\n        component: DifferSignupVerifyComponent,\r\n      },\r\n      {\r\n        path: 'webapp/differ-customer-information',\r\n        component: DifferCustomerInformationComponent,\r\n      },\r\n      {\r\n        path: 'webapp/differ-my-profile',\r\n        component: DifferMyProfileComponent,\r\n        canActivate: [RouteGuard]\r\n      },\r\n      {\r\n        path: 'webapp/differ-checkout',\r\n        component: CheckoutComponent,\r\n        canActivate: [RouteGuard]\r\n      },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { DifferServiceList } from './../differ-service-list/differ-service-list.service';\r\nimport swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm!: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private router: Router, private differServiceList:DifferServiceList) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(70), Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$\") ]),\r\n      password: new FormControl('', [Validators.required ]),\r\n    });\r\n  }\r\n\r\n  get loginFormHas(): { [key: string]: AbstractControl } {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  async handleSubmit() {\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    let reqData = {\r\n      email: this.loginForm.value.email,\r\n      password: this.loginForm.value.password,\r\n    };\r\n    this.differServiceList.login(reqData).subscribe((result: any) => {\r\n      if (result['code'] == 200) {\r\n        sessionStorage.setItem('token', result.data.token);\r\n        this.router.navigate(['/webapp/differ-checkout']);\r\n      }\r\n      else {\r\n        swal.fire(result.message);\r\n      }\r\n    },\r\n      (err: any) => {\r\n        console.log(err, \"error\");\r\n      });\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n\r\n<div class=\"d-flex justify-content-center align-items-center flex-column h-100\">\r\n    <p class=\"medium-text\">\r\n      Enter your Login Details\r\n    </p>\r\n    <form\r\n      [formGroup]=\"loginForm\"\r\n      (ngSubmit)=\"handleSubmit()\"\r\n      class=\"form signup\"\r\n    >\r\n      <label for=\"\">Email Address</label>\r\n      <input\r\n        type=\"email\"\r\n        class=\"form-control\"\r\n        name=\"email\"\r\n        formControlName=\"email\"\r\n        placeholder=\"Enter Your Email Address\"\r\n      />\r\n      <div class=\"error-box\" *ngIf=\"submitted && loginFormHas.email?.errors\">\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"loginFormHas.email.errors?.required\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address is Required</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; loginForm.reset();\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"loginFormHas.email.errors?.minlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address between 5 to 70 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; loginForm.reset();\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"loginFormHas.email.errors?.maxlength\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address between 5 to 70 characters</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; loginForm.reset()\"\r\n          ></button>\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"loginFormHas.email.errors?.pattern\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Email Address is not valid</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false; loginForm.reset()\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <label for=\"\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        class=\"form-control\"\r\n        name=\"password\"\r\n        formControlName=\"password\"\r\n        placeholder=\"Enter Your Password\"\r\n      />\r\n      <div class=\"error-box\" *ngIf=\"submitted && loginFormHas.password?.errors\">\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show\"\r\n          role=\"alert\"\r\n          *ngIf=\"loginFormHas.password.errors?.required\"\r\n        >\r\n          <i class=\"fa-solid fa-triangle-exclamation\"></i>\r\n          <span class=\"error-text\">Password is Required</span>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n            (click)=\"submitted = false;loginForm.reset()\"\r\n          ></button>\r\n        </div>\r\n      </div>\r\n      <button class=\"btn w-100\" type=\"submit\">Next</button>\r\n    </form>\r\n  </div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}